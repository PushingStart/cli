version: "1.0"

stages:
  - "clone"
  - "build"
  - "test"
  - "package"
  - "publish"
  - "release"

steps:
  init:
    title: Init
    stage: clone
    image: codefresh/cli
    shell: bash
    commands:
      - cf_export GITHUB_TOKEN=$(codefresh get context github --decrypt -o yaml | yq -y .spec.data.auth.password)
      - export MAIN_REPO_NAME=cli
      - cf_export MAIN_REPO_NAME=${MAIN_REPO_NAME}
      - cf_export MAIN_REPO_PATH=/codefresh/volume/${MAIN_REPO_NAME}.git
      - export MOCK_DATA_REPO_NAME=mock-data
      - cf_export MOCK_DATA_REPO_NAME=${MOCK_DATA_REPO_NAME}
      - cf_export MOCK_DATA_REPO_PATH=/codefresh/volume/${MOCK_DATA_REPO_NAME}.git
      - export CICD_REPO_NAME=cicd
      - cf_export CICD_REPO_NAME=${CICD_REPO_NAME}
      - cf_export CICD_REPO_PATH=/codefresh/volume/${CICD_REPO_NAME}.git
      - export HOMEBREW_TAP_REPO_NAME=homebrew-cli
      - cf_export HOMEBREW_TAP_REPO_NAME=${HOMEBREW_TAP_REPO_NAME}
      - cf_export HOMEBREW_TAP_REPO_PATH=/codefresh/volume/${HOMEBREW_TAP_REPO_NAME}.git      
      - cf_export CF_REPO_OWNER=kubevious
      - export PRODUCT_NAME=cli
      - export IMAGE_NAME=kubevious/${PRODUCT_NAME}
      - cf_export IMAGE_NAME=${IMAGE_NAME}
      - 'echo "Image Name: ${IMAGE_NAME}"'


  clone:
    title: Clone Repo
    stage: clone
    image: "alpine/git:latest"
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{MAIN_REPO_PATH}}
      - "git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{MAIN_REPO_NAME}}.git ${{MAIN_REPO_PATH}}"
      - ls -la
      - cd ${{MAIN_REPO_PATH}}
      - ls -la

  clone_cicd:
    title: Clone CI/CD Repo
    stage: clone
    image: "alpine/git:latest"
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{CICD_REPO_PATH}}
      - "git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{CICD_REPO_NAME}}.git ${{CICD_REPO_PATH}}"
      - ls -la
      - cd ${{CICD_REPO_PATH}}
      - ls -la

  clone_mock_data:
    title: Clone Mock Data Repo
    stage: clone
    image: "alpine/git:latest"
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{HOMEBREW_TAP_REPO_PATH}}
      - "git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{HOMEBREW_TAP_REPO_NAME}}.git ${{HOMEBREW_TAP_REPO_PATH}}"
      - ls -la
      - cd ${{MOCK_DATA_REPO_PATH}}
      - ls -la

  clone_homebrew_tap:
    title: Clone Homebrew Tap Repo
    stage: clone
    image: "alpine/git:latest"
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{CICD_REPO_PATH}}
      - "git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{CICD_REPO_NAME}}.git ${{CICD_REPO_PATH}}"
      - ls -la
      - cd ${{CICD_REPO_PATH}}
      - ls -la


  inject_version:
    title: Inject Version
    stage: build
    image: kubevious/cicd_deployer:v2
    shell: bash
    working_directory: "${{MAIN_REPO_PATH}}"
    commands:
      - pwd
      - ls -la
      - source ${{CICD_REPO_PATH}}/process-version-bump.sh
      - echo "NEW VERSION=${PRODUCT_VERSION}"
      - source version.sh
      - cf_export PRODUCT_VERSION=${PRODUCT_VERSION}
      - cf_export DOCKER_TAG=${PRODUCT_VERSION}
      - ./scripts/setup-pre-commit-hook-version.sh
      - git status

  prepare:
    title: Prepare Dependencies
    stage: build
    image: "kubevious/node-builder:14"
    working_directory: "${{MAIN_REPO_PATH}}"
    commands:
      - yarn install --frozen-lockfile

  compile:
    title: Compile
    stage: build
    image: "kubevious/node-builder:14"
    working_directory: "${{MAIN_REPO_PATH}}"
    commands:
      - ./scripts/prepare-package.sh
      - npm run build

  # run_unit_test:
  #   title: Run Unit Tests
  #   stage: test
  #   image: 'kubevious/node-builder:14'
  #   working_directory: "${{MAIN_REPO_PATH}}"
  #   commands:
  #     - pwd
  #     - ls -la
  #     - npm test

  package_npm:
    title: Package NPM
    stage: package
    image: "kubevious/node-builder:14"
    working_directory: "${{MAIN_REPO_PATH}}"
    commands:
      - npm pack
      - ls -la

  docker_build:
    title: Building Kubevious CLI Image
    stage: package
    type: build
    image_name: "${{IMAGE_NAME}}"
    tag: "${{DOCKER_TAG}}"
    working_directory: "${{MAIN_REPO_PATH}}"
    disable_push: true

  # build_executables:
  #   title: Build Executables
  #   stage: package
  #   image: 'kubevious/node-executable-builder:v2'
  #   working_directory: "${{MAIN_REPO_PATH}}"
  #   shell: bash
  #   commands:
  #     - ls -la
  #     - pkg . --debug
  #     - ls -la
  #     - ls -la binary/

  push_dockerhub:
    title: Pushing Kubevious CLI to DockerHub
    stage: release
    type: push
    image_name: "${{IMAGE_NAME}}"
    registry: "dockerhub"
    candidate: "${{docker_build}}"
    tags:
      - "${{DOCKER_TAG}}"
      - "latest"

  commit_main_repo:
    title: Commit Version Changes
    stage: release
    image: codefresh/cli
    working_directory: "${{MAIN_REPO_PATH}}"
    commands:
      - ${{CICD_REPO_PATH}}/cicd-commit-product-repo.sh

  publish_npm:
    title: Publish NPM
    stage: release
    image: "kubevious/node-builder:14"
    working_directory: "${{MAIN_REPO_PATH}}"
    commands:
      - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
      - npm publish

  release_homebrew_tap:
    title: Release Homebrew Tap
    stage: release
    image: kubevious/cicd_deployer:v2
    shell: bash
    working_directory: "${{CICD_REPO_PATH}}"
    commands:
      - pwd
      - source ${{MAIN_REPO_PATH}}/version.sh
      - 'echo "VERSION: ${PRODUCT_VERSION}"'
      - curl https://registry.npmjs.org/kubevious/${PRODUCT_VERSION}
      - curl https://registry.npmjs.org/kubevious/latest
      # - ./cli/tasks/release-homebrew-tap.sh